name: Deploy Infrastructure and Applications

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0
  STATE_BUCKET: "flowebb-terraform-state-bucket"
  STATE_KEY: "prod/terraform.tfstate"

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: infrastructure/terraform/environments/prod
        run: terraform init

      - name: Terraform Plan
        working-directory: infrastructure/terraform/environments/prod
        run: terraform plan -out=tfplan
        env:
          TF_VAR_project_name: ${{ secrets.TF_VAR_PROJECT_NAME }}
          TF_VAR_domain_name: ${{ secrets.TF_VAR_DOMAIN_NAME }}
          TF_VAR_frontend_domain: ${{ secrets.TF_VAR_FRONTEND_DOMAIN }}
          TF_VAR_api_domain: ${{ secrets.TF_VAR_API_DOMAIN }}

      - name: Terraform Apply
        working-directory: infrastructure/terraform/environments/prod
        run: terraform apply -auto-approve tfplan

      - name: Cleanup Terraform Lock
        if: always()  # Run even if previous steps failed
        run: |
          aws dynamodb delete-item \
            --table-name terraform-state-lock \
            --key "{\"LockID\": {\"S\": \"${{ env.STATE_BUCKET }}/${{ env.STATE_KEY }}\"}}"
        continue-on-error: true


  deploy-backend:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: backend-go/go.sum

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Backend
        working-directory: backend-go
        run: |
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bootstrap ./cmd/graphql
          zip stations.zip bootstrap
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bootstrap ./cmd/stations
          zip stations.zip bootstrap
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bootstrap ./cmd/tides
          zip tides.zip bootstrap

      - name: Update Lambda Functions
        run: |
          aws lambda update-function-code --function-name "flowebb-graphql-prod" --zip-file fileb://backend-go/graphql.zip
          aws lambda update-function-code --function-name "flowebb-stations-prod" --zip-file fileb://backend-go/stations.zip
          aws lambda update-function-code --function-name "flowebb-tides-prod" --zip-file fileb://backend-go/tides.zip
          # Wait for updates to complete
          aws lambda wait function-updated --function-name "flowebb-graphql-prod"
          aws lambda wait function-updated --function-name "flowebb-stations-prod"
          aws lambda wait function-updated --function-name "flowebb-tides-prod"

  deploy-frontend:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy frontend
        env:
          FRONTEND_BUCKET_NAME: ${{ secrets.FRONTEND_BUCKET_NAME }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          NEXT_PUBLIC_API_URL: https://api.flowebb.com
        run: |
          chmod +x scripts/deploy-frontend.sh
          ./scripts/deploy-frontend.sh prod
